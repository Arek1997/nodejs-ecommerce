<!DOCTYPE html>
<html lang="en">
	<head>
		<%- include('../components/head') %>
		<link rel="stylesheet" href="/css/forms.css" />
		<link rel="stylesheet" href="/css/product.css" />
	</head>

	<body>
		<%- include('../components/navigation') %>

		<main>
			<%- include('../components/error-message') %>

			<div class="grid">
				<div>
					<h2>Current Product:</h2>
					<article class="card product-item">
						<header class="card__header">
							<h1 class="product__title"></h1>
						</header>
						<div class="card__image">
							<img src="" />
						</div>
						<div class="card__content">
							<h2 class="product__price"></h2>
							<p class="product__description"></p>
						</div>
					</article>
				</div>

				<div>
					<h2>Add Product:</h2>
					<%- include('../components/product-form') %>
				</div>
			</div>
		</main>
		<script>
			const allInputs = document.querySelectorAll(
				'input:not([type="hidden"]), textarea'
			);

			const createUrlFromFile = (fileList) => {
				const DEFAULT_NO_PHOTO =
					'https://chambrelan.com/wp-content/uploads/2022/02/no-image.png';
				const [file] = fileList;
				return file ? URL.createObjectURL(file) : DEFAULT_NO_PHOTO;
			};

			const fillPreviewHandler = (editingElement) => {
				const editingElementID = editingElement.id;
				const editingElementValue = editingElement.value;

				const isImageElement = editingElementID.startsWith('image');

				const elementToChange = isImageElement
					? document.querySelector(`.card__image img`)
					: document.querySelector(`.product__${editingElementID}`);

				switch (editingElementID) {
					case 'title':
					case 'description':
						elementToChange.textContent = editingElementValue;
						break;

					case 'image':
						elementToChange.src = createUrlFromFile(editingElement.files);
						break;

					case 'price':
						elementToChange.textContent = editingElementValue
							? '$' + editingElementValue
							: '';
						break;

					default:
						throw new Error('Element was not found.');
				}
			};

			allInputs.forEach((item) => {
				fillPreviewHandler(item);
				item.addEventListener('input', () => fillPreviewHandler(item));
			});
		</script>
	</body>
</html>
